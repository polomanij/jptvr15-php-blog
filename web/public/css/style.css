body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
fieldset,
img,
abbr {
  border: 0;
}
address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}
ul li {
  list-style: none;
}
caption,
th {
  text-align: left;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}
sup {
  vertical-align: text-top;
}
sub {
  vertical-align: text-bottom;
}
input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}
legend {
  color: #000;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}
img {
  max-width: 100%;
  height: auto;
}
* {
  margin: 0;
  padding: 0;
}
a {
  color: inherit;
  text-decoration: none;
}
body {
  background: #55cfff;
  font-family: Micra;
}
.wrapper {
  max-width: 1900px;
  margin: 0 auto;
  padding-left: 30px;
  padding-right: 30px;
}
@media screen and (max-width: 992px) {
  .wrapper {
    padding-left: 15px;
    padding-right: 15px;
  }
}
.submit-btn {
  padding: 5px;
  font-size: 25px;
  font-weight: bold;
  border: none;
  background: #55cfff;
  cursor: pointer;
}
.header {
  position: relative;
  margin-bottom: 10px;
  padding: 15px 0;
  background: #045d7f;
}
.header-row {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  display: flex;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px;
  -webkit-box-align: center;
  align-items: center;
}
.header-logo {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(25% - 30px);
}
@media screen and (max-width: 740px) {
  .header-logo {
    width: calc(100% - 30px);
  }
}
@media screen and (max-width: 740px) {
  .header-logo {
    margin-bottom: 10px;
    text-align: center;
  }
}
.header-logo-wrap {
  display: inline-block;
  text-align: center;
  font-size: 24px;
  color: #999;
}
.header-logo-wrap img {
  max-width: 200px;
}
.header-menu {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(75% - 30px);
  text-align: right;
}
@media screen and (max-width: 740px) {
  .header-menu {
    width: calc(100% - 30px);
  }
}
.header-menu-toggle,
.header-menu li a {
  color: #fff;
  font-size: 24px;
}
.header-menu-toggle:hover,
.header-menu li a:hover {
  color: #09baff;
}
.header-menu-toggle {
  display: none;
  text-align: center;
  font-size: 26px;
  font-weight: bold;
  cursor: pointer;
}
@media screen and (max-width: 740px) {
  .header-menu-toggle {
    display: block;
  }
}
@media screen and (max-width: 740px) {
  .header-menu ul {
    display: none;
    position: absolute;
    left: 0;
    width: 100%;
    background: #045d7f;
  }
}
.header-menu li {
  display: inline-block;
  margin-right: 15px;
}
@media screen and (max-width: 740px) {
  .header-menu li {
    display: block;
    margin-right: 0;
    margin-bottom: 5px;
    text-align: center;
  }
}
.main {
  font-size: 20px;
  color: #55cfff;
}
.main-row {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-align: start;
  align-items: flex-start;
}
.main-content {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(75% - 30px);
  padding: 20px;
  border-radius: 10px;
  background: #27677f;
  text-align: center;
}
@media screen and (max-width: 992px) {
  .main-content {
    width: calc(100% - 30px);
  }
}
.main-sidebar {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(25% - 30px);
  padding: 15px 10px;
  background: #808080;
  border-radius: 10px;
  text-align: center;
}
@media screen and (max-width: 992px) {
  .main-sidebar {
    display: none;
  }
}
.main-sidebar h3 {
  margin: 15px 0;
  font-size: 25px;
  font-weight: bold;
  color: #27677f;
}
.main-sidebar-best h3 {
  margin-top: 0;
}
.main-sidebar a {
  display: block;
  font-size: 22px;
  color: #fff;
}
.main-sidebar a:hover {
  color: #09baff;
}
.main-sidebar-best a,
.main-sidebar-category a {
  margin-bottom: 10px;
}
.main-sidebar-banner {
  max-width: 100%;
  margin: 15px 0;
}
.main-sidebar-tags a {
  display: inline-block;
  margin-right: 12px;
}
.content-title {
  font-size: 27px;
  color: #fff;
  margin-bottom: 15px;
}
.content-post {
  margin-bottom: 30px;
}
.content-post:last-child {
  margin-bottom: 0;
}
.content-post-img {
  max-width: 500px;
  margin: 10px auto;
}
.content-post-title {
  font-size: 24px;
  font-weight: bold;
  color: #55cfff;
}
.content-post-read {
  margin-right: 20px;
}
.content-post-read:hover {
  color: #0795cc;
}
.content-post-info {
  margin-top: 20px;
}
.content-post-info a:hover {
  color: #0795cc;
}
.content-post-category p {
  display: inline-block;
  margin-right: 5px;
}
.content-post-tags {
  margin-bottom: 15px;
}
.content-post-tags p {
  display: inline-block;
}
.content-post-tags a {
  margin-left: 10px;
}
.content-login label {
  display: block;
  margin-bottom: 20px;
}
.comments-item {
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 2px solid #fff;
}
.comments-item:last-child {
  margin-bottom: 0;
  border-bottom: none;
}
.comments-add .submit-btn {
  margin-top: 10px;
  margin-bottom: 25px;
}
.comments-new {
  width: 100%;
  height: 100px;
  margin-top: 10px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */